package com.github.shham12.nfc_emv_adaptor.iso7816emv

import org.junit.Assert
import org.junit.Before
import org.junit.Test


class CaPublicKeyTableTest {
    private var publicKeyTable: CaPublicKeyTable? = null

    @Before
    fun setUp() {
        val xmlString =
            """ 
            [
                {
                    "CheckSum": "20D213126955DE205ADC2FD2822BD22DE21CF9A8",
                    "ExpiryDate": "12312024",
                    "Exponent": "03",
                    "Issuer": "",
                    "KeyType": "",
                    "Modulus": "D9FD6ED75D51D0E30664BD157023EAA1FFA871E4DA65672B863D255E81E137A51DE4F72BCC9E44ACE12127F87E263D3AF9DD9CF35CA4A7B01E907000BA85D24954C2FCA3074825DDD4C0C8F186CB020F683E02F2DEAD3969133F06F7845166ACEB57CA0FC2603445469811D293BFEFBAFAB57631B3DD91E796BF850A25012F1AE38F05AA5C4D6D03B1DC2E568612785938BBC9B3CD3A910C1DA55A5A9218ACE0F7A21287752682F15832A678D6E1ED0B",
                    "PKIndex": "08",
                    "RID": "A000000003"
                },
                {
                    "CheckSum": "1FF80A40173F52D7D27E0F26A146A1C8CCB29046",
                    "ExpiryDate": "12312027",
                    "Exponent": "03",
                    "Issuer": "",
                    "KeyType": "",
                    "Modulus": "9D912248DE0A4E39C1A7DDE3F6D2588992C1A4095AFBD1824D1BA74847F2BC4926D2EFD904B4B54954CD189A54C5D1179654F8F9B0D2AB5F0357EB642FEDA95D3912C6576945FAB897E7062CAA44A4AA06B8FE6E3DBA18AF6AE3738E30429EE9BE03427C9D64F695FA8CAB4BFE376853EA34AD1D76BFCAD15908C077FFE6DC5521ECEF5D278A96E26F57359FFAEDA19434B937F1AD999DC5C41EB11935B44C18100E857F431A4A5A6BB65114F174C2D7B59FDF237D6BB1DD0916E644D709DED56481477C75D95CDD68254615F7740EC07F330AC5D67BCD75BF23D28A140826C026DBDE971A37CD3EF9B8DF644AC385010501EFC6509D7A41",
                    "PKIndex": "09",
                    "RID": "A000000003"
                },
                {
                    "CheckSum": "EBFA0D5D06D8CE702DA3EAE890701D45E274C845",
                    "ExpiryDate": "12312024",
                    "Exponent": "03",
                    "Issuer": "",
                    "KeyType": "",
                    "Modulus": "B8048ABC30C90D976336543E3FD7091C8FE4800DF820ED55E7E94813ED00555B573FECA3D84AF6131A651D66CFF4284FB13B635EDD0EE40176D8BF04B7FD1C7BACF9AC7327DFAA8AA72D10DB3B8E70B2DDD811CB4196525EA386ACC33C0D9D4575916469C4E4F53E8E1C912CC618CB22DDE7C3568E90022E6BBA770202E4522A2DD623D180E215BD1D1507FE3DC90CA310D27B3EFCCD8F83DE3052CAD1E48938C68D095AAC91B5F37E28BB49EC7ED597",
                    "PKIndex": "05",
                    "RID": "A000000004"
                },
                {
                    "CheckSum": "F910A1504D5FFB793D94F3B500765E1ABCAD72D9",
                    "ExpiryDate": "12312029",
                    "Exponent": "03",
                    "Issuer": "",
                    "KeyType": "",
                    "Modulus": "CB26FC830B43785B2BCE37C81ED334622F9622F4C89AAE641046B2353433883F307FB7C974162DA72F7A4EC75D9D657336865B8D3023D3D645667625C9A07A6B7A137CF0C64198AE38FC238006FB2603F41F4F3BB9DA1347270F2F5D8C606E420958C5F7D50A71DE30142F70DE468889B5E3A08695B938A50FC980393A9CBCE44AD2D64F630BB33AD3F5F5FD495D31F37818C1D94071342E07F1BEC2194F6035BA5DED3936500EB82DFDA6E8AFB655B1EF3D0D7EBF86B66DD9F29F6B1D324FE8B26CE38AB2013DD13F611E7A594D675C4432350EA244CC34F3873CBA06592987A1D7E852ADC22EF5A2EE28132031E48F74037E3B34AB747F",
                    "PKIndex": "06",
                    "RID": "A000000004"
                },
                {
                    "CheckSum": "D18AB9F1518FBC0F6EB0EEFB00C5D07CAE8A2197",
                    "ExpiryDate": "12312024",
                    "Exponent": "010001",
                    "Issuer": "",
                    "KeyType": "",
                    "Modulus": "DB43A71FF30392069A9600143DCB628A4DABDFE69E31CB6151D9A2EB18A53ABA1EF75518CD3EDA29B96D55B002870A649AAFC65CE472BD01352C2D2E77D4EE352B3A64BC2CC170E29D426D7B3317BD3C4FC32EA2151CA0F1071A2ACFECD70468D3EBC7A44440DD63EC9499F302348BB6235F964BF3CAA30B29939B9901C42B5540BF4F837DD898F5392076F9B95F0EBCB6846374FFE71895A422775D95CABA9C25510627D4F7B57A3DBD755608EDD843",
                    "PKIndex": "06",
                    "RID": "A000000277"
                },
                {
                    "CheckSum": "46EAD2ED0B8645D4DCB2AE4B1D285A0632B452D4",
                    "ExpiryDate": "12312025",
                    "Exponent": "010001",
                    "Issuer": "",
                    "KeyType": "",
                    "Modulus": "AB1B0667B2A68883477B2ED48F3068CB0F57ABBEC93E0AF40180BACD895120E36E2710784599CDE9035550D96BD6C5CEA55C4E8C88A5D0A81CE1309559BCE91930C7AA3E3D0A2D79A6036BE03C4000658A78ECA742034BE5FB0E08D530C7FF9458211E78E33E3803F8DFF24A4117EE0EDFE7A98CB3AE2ECCB2A3C3A75C32512EDD1183CF218BE1642FA78430A18A495E6FEFA7B98860C6FCEBFD27537D34F4E55B9CBDEB19DF029BDF00993E1A2E0B9E89E1B49777FCB7C1610CDA94A488C9177908B75C48DFE3F8BBD52886233B44B1A58373D5AFD0F309ABB939C39DF95D923F76B7300E83D182C2922EBB9FD018867A0E6D179EFF8C87",
                    "PKIndex": "08",
                    "RID": "A000000277"
                },
                {
                    "CheckSum": "A73472B3AB557493A9BC2179CC8014053B12BAB4",
                    "ExpiryDate": "12312024",
                    "Exponent": "03",
                    "Issuer": "",
                    "KeyType": "",
                    "Modulus": "CF4C3D3DFA30332057974B82479D33A39993CB7E5524A7B5B3FC93C3BFEA58A23E4D79D0C943EB0289CFD7C6C5F0DDA7B76CA8CB31367A0046A85CB5F09AB59CB2E40DFD9B86060CD3D330902A9D9AB48F7DF496ED7D82C5062C7834B899196F10F02FFB2C8CF9B1ACAE63F6C68FC83EBBC7D5368986605A0B3E10F1D3005417C4725E3CFB1CA224DF126AD87DFE2D4A005F5A0287FC3E0A4AD84562795A8CFDAF92BD037DDDA07D13BEE923EFBF5",
                    "PKIndex": "02",
                    "RID": "A000000065"
                }
            ]
            """

        publicKeyTable = CaPublicKeyTable(xmlString)
    }

    @Test
    fun testGetPublicKeys() {
        val publicKeys = publicKeyTable!!.getPublicKeys()
        Assert.assertNotNull(publicKeys)
        Assert.assertFalse(publicKeys.isEmpty())
        Assert.assertEquals(7, publicKeys.size.toLong())
    }

    @Test
    fun testFindPublicKey() {
        val publicKey = publicKeyTable!!.findPublicKey("A000000003", "08")
        Assert.assertNotNull(publicKey)
        Assert.assertEquals("A000000003", publicKey!!.rid)
        Assert.assertEquals("08", publicKey.index)
    }

    @Test
    fun testFindNonExistingPublicKey() {
        val publicKey = publicKeyTable!!.findPublicKey("A000000004", "01")
        Assert.assertNull(publicKey)
    }
}
